/* 统一按钮系统样式文件 */
/* 重新设计的按钮动画系统 - 统一样式名称和容器 */

/* ========== 统一按钮容器 ========== */

/* 统一的灵动岛按钮 */
.dynamic-button {
    position: fixed;
    bottom: 30px;
    left: 50%;
    transform: translateX(-50%);
    transform-origin: center;
    width: 30px;
    height: 30px;
    background: #333;
    border-radius: 25px;
    opacity: 0;
    cursor: pointer;
    z-index: 1000;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    transition: all 0.3s ease;
}

/* 统一的返回按钮 */
.back-button {
    position: fixed;
    top: 30px;
    left: 30px;
    width: 50px;
    height: 50px;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 25px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    z-index: 1000;
    opacity: 0;
    transition: all 0.3s ease, box-shadow 0.4s ease;
}

.back-button svg {
    width: 24px;
    height: 24px;
    fill: white;
}

/* 按钮内容 */
.button-content {
    color: white;
    font-size: 14px;
    font-weight: 500;
    opacity: 0;
    white-space: nowrap;
}

/* ========== 按钮状态类 ========== */

/* 显示状态 */
.dynamic-button.show {
    /* 透明度由动画控制，不在此设置 */
}

/* 展开动画状态 */
.dynamic-button.expanding {
    animation: expandButton 2s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
}

.dynamic-button.expanding .button-content {
    animation: fadeInContent 0.5s ease-out 1.5s forwards;
}

/* 展开完成状态 */
.dynamic-button.expanded {
    width: 200px;
    height: 50px;
    border-radius: 25px;
    opacity: 1;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
}

.dynamic-button.expanded .button-content {
    opacity: 1;
}

/* 收缩状态样式 */
.dynamic-button.shrinking {
    animation: shrinkButton 1.2s ease-in-out forwards;
}

.dynamic-button.shrinking .button-content {
    animation: fadeOutContent 0.2s ease-out forwards;
}

/* 禁用状态样式 */
.dynamic-button.disabled {
    background: #666;
    cursor: not-allowed;
    opacity: 0.5;
}

.dynamic-button.disabled .button-content {
    color: #999;
}

/* 启用状态样式 */
.dynamic-button.enabled {
    background: #333;
    cursor: pointer;
    opacity: 1;
}

.dynamic-button.enabled .button-content {
    color: white;
}

/* 光效状态 */
.dynamic-button.glow {
    box-shadow: 0 0 40px rgba(255, 255, 255, 0.6), 
                0 0 80px rgba(255, 255, 255, 0.4), 
                0 0 120px rgba(255, 255, 255, 0.2), 
                0 4px 20px rgba(0, 0, 0, 0.3);
}

/* 收缩状态 */
.dynamic-button.shrinking {
    width: 30px;
    height: 30px;
    border-radius: 25px;
}

.dynamic-button.shrinking .button-content {
    opacity: 0;
}

/* ========== 悬浮效果 ========== */

.dynamic-button:hover {
    background: #444;
    box-shadow: 0 0 30px rgba(255, 255, 255, 0.5), 
                0 0 60px rgba(255, 255, 255, 0.3), 
                0 4px 20px rgba(0, 0, 0, 0.3);
    transform: translateX(-50%);
    opacity: 1;
}

/* 返回按钮显示状态 */
.back-button.show {
    opacity: 1;
}

/* 返回按钮缩回状态 */
.back-button.shrinking {
    animation: shrinkBackButton 0.6s ease-in forwards;
}

.back-button:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.4);
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.3);
}

.back-button:active {
    transform: scale(0.95);
}



/* ========== 动画关键帧定义 ========== */

/* 统一展开动画：从中心向外扩展→发光放大→展开→光效消失 */
@keyframes expandButton {
    0% {
        width: 30px;
        height: 30px;
        opacity: 0;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    }
    
    25% {
        width: 50px;
        height: 50px;
        opacity: 0.6;
        box-shadow: 0 0 20px rgba(255, 255, 255, 0.4), 
                    0 0 40px rgba(255, 255, 255, 0.3), 
                    0 4px 20px rgba(0, 0, 0, 0.3);
    }
    
    50% {
        width: 50px;
        height: 50px;
        opacity: 0.8;
        box-shadow: 0 0 40px rgba(255, 255, 255, 0.6), 
                    0 0 80px rgba(255, 255, 255, 0.4), 
                    0 0 120px rgba(255, 255, 255, 0.2), 
                    0 4px 20px rgba(0, 0, 0, 0.3);
    }
    
    75% {
        width: 200px;
        height: 50px;
        opacity: 1;
        box-shadow: 0 0 30px rgba(255, 255, 255, 0.4), 
                    0 0 60px rgba(255, 255, 255, 0.2), 
                    0 4px 20px rgba(0, 0, 0, 0.3);
    }
    
    100% {
        width: 200px;
        height: 50px;
        opacity: 1;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    }
}

/* 按钮内容原地淡入动画 */
@keyframes fadeInContent {
    0% {
        opacity: 0;
        transform: none;
    }
    100% {
        opacity: 1;
        transform: none;
    }
}

/* 按钮收缩动画 */
@keyframes shrinkButton {
    0% {
        width: 200px;
        height: 50px;
        border-radius: 25px;
        opacity: 1;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    }
    
    50% {
        width: 100px;
        height: 40px;
        border-radius: 20px;
        opacity: 0.5;
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.2);
    }
    
    100% {
        width: 30px;
        height: 30px;
        border-radius: 15px;
        opacity: 0;
        box-shadow: none;
    }
}

/* 按钮内容淡出动画 */
@keyframes fadeOutContent {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

/* 页面内容渐隐动画 */
@keyframes fadeOutPage {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

/* 星空背景渐隐动画 */
@keyframes fadeOutStarfield {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

/* 返回按钮缩回动画 */
@keyframes shrinkBackButton {
    0% {
        opacity: 1;
        transform: scale(1);
        box-shadow: 0 0 20px rgba(255, 255, 255, 0.3);
    }
    50% {
        transform: scale(0.8);
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.2);
    }
    100% {
        opacity: 0;
        transform: scale(0.3);
        box-shadow: none;
    }
}

/* 页面渐隐状态样式 */
.page-fading .main-container {
    animation: fadeOutPage 1.2s ease-out forwards;
}

/* ========== 页面特定样式 ========== */



/* 第二页和第三页返回按钮显示 */
.second-page .back-button {
    opacity: 1;
}

.third-page .back-button {
    opacity: 1;
}

/* ========== 响应式设计 ========== */

@media (max-width: 768px) {
    .back-button {
        top: 20px;
        left: 20px;
        width: 45px;
        height: 45px;
    }
    
    .back-button svg {
        width: 20px;
        height: 20px;
    }
    
    .dynamic-button {
        bottom: 20px;
        width: 45px;
        height: 45px;
    }
    
    .dynamic-button.expanded {
        width: 180px;
    }
    
    .button-content {
        font-size: 12px;
    }
}

@media (max-width: 480px) {
    .back-button {
        top: 15px;
        left: 15px;
        width: 40px;
        height: 40px;
    }
    
    .back-button svg {
        width: 18px;
        height: 18px;
    }
    
    .dynamic-button {
        bottom: 15px;
        width: 40px;
        height: 40px;
    }
    
    .dynamic-button.expanded {
        width: 160px;
    }
    
    .button-content {
        font-size: 11px;
    }
}